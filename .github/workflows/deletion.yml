name: Destroying Feature Environment
on:
  pull_request:
    branches:
      - delete
    types: [closed]
jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install Terraform
      env:
        TERRAFORM_VERSION: "0.12.15"
      run: |
        tf_version=$TERRAFORM_VERSION
        wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
        unzip terraform_"$tf_version"_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}



    - name: Verify Terraform version
      run: terraform --version
    - shell: bash
      run: |
        echo "$GITHUB_ACTOR"-"$GITHUB_RUN_NUMBER"
        echo "the reference = " ${GITHUB_REF}
        echo "try fail val = " ${GITHUB_REF##*/}
        echo "the name = " ${{ steps.get_version.outputs.VERSION }}
    
 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      id: git
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - shell: bash
      run: |
        aws s3 ls
 
    - name: Verify outputs
      run: terraform --version
    - shell: bash
      run: |
        echo "the oauth = " ${{ secrets.AWS_GIT_PARAM}}
        echo "the arn = " ${{ secrets.AWS_LOAD_ARN}}
        echo "the dns id = " ${{ secrets.AWS_DNS_ID}}
        echo "the name = " ${{ steps.get_version.outputs.VERSION }}
        
    - name: Verify Terraform version
      run: terraform --version
    - shell: bash
      run: |
        echo "$GITHUB_ACTOR"-"$GITHUB_RUN_NUMBER"
        echo "the reference = " ${GITHUB_REF}
        echo "try fail val = " ${GITHUB_REF##*/}
        echo "the name = " ${{ steps.get_version.outputs.VERSION }}
        aws s3 cp s3://day0day01/main.tf .
        key_name=${{ github.head_ref }}
        sed -i "s/demo/$key_name/g" main.tf
        cat main.tf
        terraform init
        terraform destroy --auto-approve
